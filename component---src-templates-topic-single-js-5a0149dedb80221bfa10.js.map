{"version":3,"sources":["webpack://Layer5/./src/components/Related-Topics/relatedTopics.style.js","webpack://Layer5/./src/components/Related-Topics/index.js","webpack://Layer5/./src/sections/Topics/Topic-single/topicSingle.style.js","webpack://Layer5/./src/components/Related-Topics/relatedTopicsFactory.js","webpack://Layer5/./src/sections/Topics/Topic-single/index.js","webpack://Layer5/./src/templates/topic-single.js"],"names":["styled","props","theme","primaryColor","secondaryColor","topicType","relatedTopics","mainHead","lastCardHead","linkToAllItems","className","window","dots","innerWidth","arrows","infinite","speed","slidesToShow","slidesToScroll","map","topic","xs","key","fields","slug","Card","frontmatter","lg","Link","to","black","white","topics","currentTopicSlug","this","filter","maxTopics","category","tags","setMaxTopics","m","setCategory","setTags","getTopics","identityMap","length","console","error","getSlug","addToMap","Object","prototype","hasOwnProperty","call","points","addCategoryPoints","addTagsPoints","forEach","tag","arrayIdentityMap","keys","splice","data","mdx","body","useStaticQuery","allMdx","nodes","RelatedTopicsFactory","PageHeader","title","subtitle","thumbnail","MDXRenderer","slugify","image","publicURL","Navigation","Footer"],"mappings":"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","file":"component---src-templates-topic-single-js-5a0149dedb80221bfa10.js","sourcesContent":["import styled from \"styled-components\";\n\nconst RelatedTopicsWrapper = styled.div`\n\n    .widgets-title{\n        margin: 1rem 0 2rem 0.5rem;\n        h3{\n            font-size: 1.5rem;\n        }\n    }\n    @media screen and (max-width:500px){\n        .widgets-title{\n            h3{\n                text-align: center;\n            }\n        }\n    }\n\n    .cardCol{\n        padding: 0 1rem;\n    }\n    @media screen and (max-width: 992px) {\n        .cardCol{\n            padding: 0 1rem;\n            margin: auto;\n        }\n    }\n\n    .slick-list{\n        padding-top: 2px;\n        text-align: center;\n    }\n    @media screen and (max-width: 992px) {\n        .slick-list{\n            margin: 0;\t\n        }\n    }\n\n    .slick-arrow{\n        width: 4.8rem;\t\n        height: 5rem;\n    }\t\n    .slick-arrow:before{\t\n        color: ${props => props.theme.primaryColor};\n        font-size: 6rem;\n        display: inline-block;\n        height: 3rem;\n    }\n    .slick-arrow:hover:before{\t\n        color: ${props => props.theme.secondaryColor};\n    }\n    .slick-prev:before{\t\n        content: \"‹\";\t\n        line-height: 0;\n        opacity: 1;\n        color: ${props => props.theme.primaryColor};\n        margin-left: -3rem;\n    }\n    .slick-next:before{\t\n        content: \"›\";\n        line-height: 0;\n        opacity: 1;\n        margin-left: 2rem;\n        color: ${props => props.theme.primaryColor};\n    }\n    .slick-disabled{\t\n        visibility: hidden;\n    }\n    .slick-dots li button:before {\n        font-size: 0.6rem;\n        color: ${props => props.theme.secondaryColor};\n    }\n    .slick-dots li.slick-active button:before {\n        opacity: 1;\n        color: ${props => props.theme.secondaryColor};\n    }\n\n    .topic-meta-block{\n        text-align: left;\n    }\n\n    .topic-content-block{\n        height: 10rem;\n\n        .topic-title {\n            text-align: left;\n        }\n    }\n\n    .allTopics{\n        height: 22rem;\n    }\n\n    @media screen and (min-width: 1200px) {\n        .topic-content-block {\n            height: 8rem;\n        }\n\n        .allTopics{\n            height: 19.5rem;\n        }\n    }\n\n    @media screen and (max-width: 720px) and (min-width: 385px){\n        .topic-content-block{\n            height: 8rem;\n        }\n\n        .allTopics{\n            height: 19.5rem;\n        }\n    }\n\n    .allTopics_card{\n        display: inline-block;\n        height: inherit;\n        width: inherit;\n        border-radius: 0.5rem;\n        box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.2);\n        transition: box-shadow 0.3s;\n\n        h2{\n            padding: 0.5rem 0;\n        }\n\n        a{\n            height: inherit;\n            width: inherit;\n            font-size: 1.8rem;\n            font-weight: 600;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            svg{\n                margin-left: 0px;\n                padding: 0.5rem 0 0.3rem;\n                font-size: 4rem;\n                transition: all 0.3s;\n            }\n        }\n        &:hover{\n            box-shadow: 0px 2px 15px 4px rgba(0,0,0,0.2);\n            h2{\n                color: ${props => props.theme.secondaryColor};\n            }\n            svg{\n                color: ${props => props.theme.secondaryColor};\n                margin-left: 3px;\n                transform: scale(1.3);\n            }\n        }\n    }\n`;\n\n\nexport default RelatedTopicsWrapper;\n","import React from \"react\";\nimport { Link} from \"gatsby\";\nimport { IoIosArrowRoundForward } from \"react-icons/io\";\nimport Card from \"../Card\";\nimport RelatedTopicsWrapper from \"./relatedTopics.style\";\nimport { Col } from \"../../reusecore/Layout\";\nimport Slider from \"react-slick\";\n\n\n\nconst RelatedTopics = props => {\n  \n  const {topicType , relatedTopics , mainHead , lastCardHead , linkToAllItems} = props;\n\n  return (\n    <RelatedTopicsWrapper>\n      <div className=\"widgets-title\">\n        <h3>{mainHead}</h3>\n      </div>\n      {\n        typeof window !== \"undefined\" &&\n                <Slider\n                  dots= { window.innerWidth < 992 }\n                  arrows={ window.innerWidth >= 992 }\n                  infinite= {false}\n                  speed= \"500\"\n                  slidesToShow= {window.innerWidth <= 720 ? 1 : window.innerWidth <= 991 ? 2 : 3}\n                  slidesToScroll= {1}\n                >\n                  {\n                    topicType === \"topics\" ? relatedTopics.map(({topic}) => {\n                      return (\n                        <Col className=\"cardCol\" xs={12} key={topic.fields.slug}>\n                          <Card frontmatter={topic.frontmatter} fields={topic.fields}/>\n                        </Col>\n                      );\n                    }):relatedTopics.map((topic) => {\n                      return (\n                        <Col className=\"cardCol\" xs={12} key={topic.fields.slug}>\n                          <Card frontmatter={topic.frontmatter} fields={topic.fields}/>\n                        </Col>\n                      );\n                    })\n                  }\n                  <Col xs={12} lg={12} className=\"allTopics\">\n                    <div className=\"allTopics_card\">\n                      <Link to={linkToAllItems}>\n                        <h2>{lastCardHead}</h2>\n                        <IoIosArrowRoundForward/>\n                      </Link>\n                    </div>\n                  </Col>\n                </Slider>\n      }\n    </RelatedTopicsWrapper>\n  );\n};\n\nexport default RelatedTopics;\n","import styled from \"styled-components\";\n\nconst TopicPageWrapper = styled.div`\n\n    .single-topic-wrapper{\n        margin-bottom: 4rem;\n    }\n\n    .topic-info-block{\n        margin-top: 3rem;\n        border-bottom: 1px solid #e5e5e5;\n        padding-bottom: 2rem;\n    }\n\n    .tags{\n        display: flex;\n        span{\n            font-size: 1.2rem;\n            align-self: center;\n        }\n        a{\n            color: ${props => props.theme.black};\n            margin: 0.2rem;\n            display: inline-block;\n            padding: 0.3rem 0.8rem;\n            border-radius: 0.2rem;\n            background: #F0F0F0;\n            transition: all 0.3s linear;\n            &:hover{\n                background: ${props => props.theme.secondaryColor};\n                color: ${props => props.theme.white};\n            }\n        }\n        div{\n            display: inline-flex;\n            flex-wrap: wrap;\n        }\n    }\n    @media screen and (max-width: 360px){\n        .tags{\n            span{\n                position: relative;\n                top: 0.5rem;\n                align-self: flex-start;\n            }\n        }\n    }\n`;\nexport default TopicPageWrapper;\n","import {includes, orderBy } from \"lodash\";\n\nclass RelatedTopicsFactory {\n\n  constructor (topics, currentTopicSlug){\n    this.topics = topics.filter(\n      (topic) => topic.fields.slug !== currentTopicSlug\n    );\n    this.currentTopicSlug = currentTopicSlug;\n    this.maxTopics = 6;\n    this.category = null;\n    this.tags = [];\n  }\n\n  setMaxTopics (m) {\n    this.maxTopics = m;\n    return this;\n  }\n\n  setCategory (category) {\n    this.category = category;\n    return this;\n  }\n\n  setTags (tags) {\n    this.tags = tags;\n    return this;\n  }\n\n  getTopics () {\n    const { category, tags, topics, maxTopics } = this;\n    const identityMap = {};\n\n    if (!!tags === false || tags.length === 0) {\n      console.error(\"RelatedTopicsFactory: Tags not provided, use setTags().\");\n      return [];\n    }\n\n    if (!!category === false) {\n      console.error(\"RelatedTopicsFactory: Category not provided, use setCategory().\");\n      return [];\n    }\n\n    const getSlug = topic => topic.fields.slug;\n\n    const addToMap = topic => {\n      const slug = getSlug(topic);\n      if(!Object.prototype.hasOwnProperty.call(identityMap, slug)){\n        identityMap[slug] = {\n          topic: topic,\n          points: 0\n        };\n      }\n    };\n\n    const addCategoryPoints = (topic, category) => {\n      const categoryPoints = 2;\n      const slug = getSlug(topic);\n\n      if(topic.frontmatter.category ===category){\n        identityMap[slug].points += categoryPoints;\n      }\n    };\n\n    const addTagsPoints = (topic, tags) => {\n      const tagPoint = 1;\n      const slug = getSlug(topic);\n\n      topic.frontmatter.tags.forEach((tag) => {\n        if (includes(tags, tag)) {\n          identityMap[slug].points += tagPoint;\n        }\n      });\n    };\n\n    const getIdentityMapAsArray = () => {\n      return Object.keys(identityMap).map((slug) => identityMap[slug]);\n    };\n\n    for (let topic of topics) {\n      addToMap(topic);\n      addCategoryPoints(topic, category);\n      addTagsPoints(topic, tags);\n    }\n\n    const arrayIdentityMap = getIdentityMapAsArray();\n\n    const relatesTopics = orderBy(\n      arrayIdentityMap, [\"points\"], [\"desc\"]\n    );\n\n    return relatesTopics.splice(0, maxTopics);\n  }\n}\n\nexport default RelatedTopicsFactory;\n","import React from \"react\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport slugify from \"../../../utils/slugify\";\nimport { Container } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport RelatedTopics from \"../../../components/Related-Topics\";\nimport TopicPageWrapper from \"./topicSingle.style\";\nimport RelatedTopicsFactory from \"../../../components/Related-Topics/relatedTopicsFactory\";\n\nconst TopicSingle = ({data}) => {\n  const { frontmatter, body, fields } = data.mdx;\n  const topicData = useStaticQuery(\n    graphql`query relatedTopics {\n  allMdx(\n    sort: {fields: [frontmatter___date], order: DESC}\n    filter: {fields: {collection: {eq: \"topics\"}}, frontmatter: {published: {eq: true}}}\n  ) {\n    nodes {\n      frontmatter {\n        title\n        date(formatString: \"MMM Do YYYY\")\n        author\n        category\n        tags\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n}\n`\n  );\n  \n  const topics = topicData.allMdx.nodes;\n  const relatedTopics = new RelatedTopicsFactory (\n    topics, fields.slug\n  ).setMaxTopics(6)\n    .setCategory(frontmatter.category)\n    .setTags(frontmatter.tags)\n    .getTopics();\n\n  return (\n    <TopicPageWrapper>\n      <PageHeader\n        title={frontmatter.title}\n        subtitle={frontmatter.subtitle}\n        category={frontmatter.category}\n\n        thumbnail={frontmatter.thumbnail}\n      />\n      <div className=\"single-topic-wrapper\">\n        <Container>\n          <SRLWrapper>\n            <MDXRenderer>{body}</MDXRenderer>\n          </SRLWrapper>\n          <div className=\"topic-info-block\">\n            <div className=\"tags\">\n              <span>Tags:</span>\n              <div>\n                {frontmatter.tags && frontmatter.tags.map(tag => (\n                  <Link key={`${frontmatter.title}-${tag}`}\n                    to={`/topics/tag/${slugify(tag)}`}>{tag}\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n          <RelatedTopics\n            topicType=\"topics\"\n            relatedTopics={relatedTopics}\n            mainHead=\"Related Topics\" \n            lastCardHead=\"All Topics\" \n            linkToAllItems=\"/topics\"\n          />\n        </Container>\n      </div>\n    </TopicPageWrapper>\n  );\n};\n\nexport default TopicSingle;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport Navigation from \"../sections/General/Navigation\";\nimport TopicSingle from \"../sections/Topics/Topic-single\";\nimport Footer from \"../sections/General/Footer\";\n\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\n\nexport const query = graphql`query TopicsBySlug($slug: String!) {\n  mdx(fields: {slug: {eq: $slug}}) {\n    body\n    frontmatter {\n      title\n      subtitle\n      date(formatString: \"MMMM Do, YYYY\")\n      author\n      category\n      tags\n      thumbnail {\n        childImageSharp {\n          gatsbyImageData(width: 500, layout: CONSTRAINED)\n        }\n        extension\n        publicURL\n      }\n    }\n    fields {\n      slug\n    }\n  }\n}\n`;\n\nconst TopicSinglePage = ({data}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title={data.mdx.frontmatter.title} image={data.mdx.frontmatter.thumbnail.publicURL}/>\n        <Navigation />\n        <TopicSingle data={data}/>\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default TopicSinglePage;\n\n"],"sourceRoot":""}