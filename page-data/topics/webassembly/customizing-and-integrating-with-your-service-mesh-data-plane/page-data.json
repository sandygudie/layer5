{"componentChunkName":"component---src-templates-topic-single-js","path":"/topics/webassembly/customizing-and-integrating-with-your-service-mesh-data-plane","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Customizing and Integrating with your Service Mesh Data Plane\",\n  \"subtitle\": \"Building Envoy filters with Rust\",\n  \"thumbnail\": \"./webassembly-logo-horizontal.png\",\n  \"category\": \"WebAssembly\",\n  \"tags\": [\"WebAssembly\", \"Envoy\"],\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(TopicsWrapper, {\n    mdxType: \"TopicsWrapper\"\n  }, mdx(\"div\", {\n    className: \"intro\"\n  }, mdx(\"p\", null, \"Learn more about WebAssembly's use within service mesh data planes in\", mdx(Link, {\n    className: \"blog\",\n    to: \"/learn/books\",\n    mdxType: \"Link\"\n  }, \"The Enterprise Path to Service Mesh Archictures (2nd Edition)\"), \" -  free book and excellent resource for anyone looking to understand WASM filters, Lua scripts, and other options available for extending the data plane.\")), mdx(\"h2\", null, \" The Power of the Data Plane\"), mdx(\"p\", null, \"Control planes bring much needed element management to operators. Data planes composed of any number of service proxies need control planes to go about the task of applying service mesh-specific use cases to their fleet of service proxies. Configuration management, telemetry collection, infrastructure-centric authorization, identity and so on are common functions delivered by a control plane. However, their true source of power is drawn significantly from the service proxy. Users commonly find themselves in need of customizing the chain of traffic filters (modules) that service proxies use to do much of their heaving lifting. Different technologies are used to provide data plane extensibility, and consequently, additional custom data plane intelligence, including:\"), mdx(\"ul\", null, mdx(\"li\", null, \"Lua - a scripting language for execution inside a Just-In-Time compiler, LuaJIT.\"), mdx(\"li\", null, \"WebAssembly (WASM) - a virtual stack machine as a compilation target for different languages to use as an execution environment.\")), mdx(\"p\", null)));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Customizing and Integrating with your Service Mesh Data Plane","subtitle":"Building Envoy filters with Rust","date":null,"author":null,"category":"WebAssembly","tags":["WebAssembly","Envoy"],"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/06e071d3040728c69145f5d670854c6d/0bfdd/webassembly-logo-horizontal.png","srcSet":"/static/06e071d3040728c69145f5d670854c6d/f5a6b/webassembly-logo-horizontal.png 125w,\n/static/06e071d3040728c69145f5d670854c6d/454d1/webassembly-logo-horizontal.png 250w,\n/static/06e071d3040728c69145f5d670854c6d/0bfdd/webassembly-logo-horizontal.png 500w,\n/static/06e071d3040728c69145f5d670854c6d/4a6c0/webassembly-logo-horizontal.png 1000w","sizes":"(min-width: 500px) 500px, 100vw"},"sources":[{"srcSet":"/static/06e071d3040728c69145f5d670854c6d/ef1dd/webassembly-logo-horizontal.webp 125w,\n/static/06e071d3040728c69145f5d670854c6d/ae3bd/webassembly-logo-horizontal.webp 250w,\n/static/06e071d3040728c69145f5d670854c6d/64625/webassembly-logo-horizontal.webp 500w,\n/static/06e071d3040728c69145f5d670854c6d/23bbe/webassembly-logo-horizontal.webp 1000w","type":"image/webp","sizes":"(min-width: 500px) 500px, 100vw"}]},"width":500,"height":308}},"extension":"png","publicURL":"/static/06e071d3040728c69145f5d670854c6d/webassembly-logo-horizontal.png"}},"fields":{"slug":"/topics/webassembly/customizing-and-integrating-with-your-service-mesh-data-plane"}}},"pageContext":{"slug":"/topics/webassembly/customizing-and-integrating-with-your-service-mesh-data-plane"}},"staticQueryHashes":["1485533831","2586928041","4047814605","7929417"]}